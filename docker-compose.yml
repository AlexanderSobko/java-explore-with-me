version: '3.1'
services:
  stats-server:
    build: ./statistics/stats-server
    image: stats-server-image
    container_name: stats-server-container
    ports:
      - "9090:9090"
    depends_on:
      stats-db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://stats-db:5432/stats
      - DB_USERNAME=postgres
      - DB_PASSWORD=password

  stats-db:
    image: postgres:14-alpine
    container_name: stats-bd-container
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d stats" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "6541:5432"
    environment:
      - POSTGRES_DB=stats
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password

  main-service:
    build: main-service
    image: main-service-image
    container_name: main-service-container
    ports:
      - "8080:8080"
    depends_on:
      main-service-db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://main-service-db:6541/main-service
      - DB_USERNAME=postgres
      - DB_PASSWORD=password

  main-service-db:
    image: postgres:14-alpine
    container_name: main-service-bd-container
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d main-service" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:6541"
    environment:
      - POSTGRES_DB=main-service
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
