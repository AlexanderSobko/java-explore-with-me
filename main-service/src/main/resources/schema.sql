CREATE TABLE IF NOT EXISTS users (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS categories (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS locations (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat FLOAT NOT NULL,
    lon FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS events (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    annotation VARCHAR NOT NULL,
    description VARCHAR NOT NULL,
    category_id INT REFERENCES categories (id),
    created_on TIMESTAMP NOT NULL,
    event_date TIMESTAMP NOT NULL,
    published_on TIMESTAMP,
    initiator INT REFERENCES users (id) ON DELETE CASCADE,
    location INT REFERENCES locations (id) ON DELETE CASCADE,
    paid BOOLEAN NOT NULL,
    request_moderation BOOLEAN,
    participant_limit  INT NOT NULL,
    state VARCHAR(255) NOT NULL
);

CREATE TABLE  IF NOT EXISTS requests (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    requester INT REFERENCES users (id) ON DELETE CASCADE,
    event INT REFERENCES events (id) ON DELETE CASCADE,
    created TIMESTAMP NOT NULL,
    status VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned BOOLEAN NOT NULL,
    title VARCHAR(600) NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations_events (
    compilation_id INT REFERENCES compilations (id) ON DELETE CASCADE,
    event_id INT REFERENCES events (id) ON DELETE CASCADE,
    PRIMARY KEY (compilation_id, event_id)
);